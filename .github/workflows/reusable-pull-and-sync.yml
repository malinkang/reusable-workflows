name: Reusable Overwrite Target Repo with Source

on:
  workflow_call:
    secrets:
        GITHUB_PAT:
          required: true

jobs:
  pull_and_sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_PAT }}
          fetch-depth: 0

      - name: Checkout Source Template Repo
        uses: actions/checkout@v4
        with:
          repository: malinkang/template-workflows # 源仓库
          ref: main # 或者您想要同步的分支/标签
          path: ${{ runner.temp }}/source-template # <--- 修改点：检出到 runner.temp 下的临时目录
          token: ${{ secrets.GITHUB_PAT }}

      - name: Overwrite Target with Source Contents
        run: |
          echo "确定目标仓库的根目录..."
          TARGET_ROOT=$(pwd)
          echo "目标仓库根目录是: $TARGET_ROOT"

          SOURCE_TEMPLATE_PATH="${{ runner.temp }}/source-template" # <--- 修改点：定义源模板路径变量
          echo "源模板临时检出路径是: $SOURCE_TEMPLATE_PATH"

          echo "列出目标仓库检出后的初始内容（包括隐藏文件）..."
          ls -A "$TARGET_ROOT/"

          echo "删除目标仓库中除 .git 之外的所有内容..."
          cd "$TARGET_ROOT"
          find . -mindepth 1 -maxdepth 1 -not -name ".git" -exec rm -rf {} +
          echo "目标仓库内容（除.git外）已清除。"

          echo "列出清除后的目标仓库内容（应只剩下 .git 或为空）..."
          ls -A "$TARGET_ROOT/"

          echo "从源模板同步所有文件到目标仓库根目录..."
          # 使用 rsync 进行同步。
          # 源路径现在是绝对路径到 runner.temp 下的目录
          rsync -av --delete --exclude='.git' "$SOURCE_TEMPLATE_PATH/" ./ # <--- 修改点：使用变量指定 rsync 源路径
          echo "文件同步完成。"

          echo "列出同步后的目标仓库内容..."
          ls -A "$TARGET_ROOT/"

          echo "清理位于 ${{ runner.temp }} 的源模板临时目录..."
          rm -rf "$SOURCE_TEMPLATE_PATH" # <--- 修改点：清理 runner.temp 下的目录
          echo "源模板临时目录已删除。"

      - name: Commit and Push Changes to Target Repo
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          if [[ -n "$(git status --porcelain)" ]]; then
            echo "检测到更改，正在提交和推送..."
            git add -A
            git commit -m "CI: Overwrite repository with content from template-workflows"
            git push
            echo "更改已推送到目标仓库。"
          else
            echo "No changes to sync. Target repository is already up-to-date with the source template."
          fi